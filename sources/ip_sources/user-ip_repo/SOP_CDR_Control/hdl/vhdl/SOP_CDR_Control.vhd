-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.3
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity SOP_CDR_Control is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    enable : IN STD_LOGIC;
    TDATAin_V : IN STD_LOGIC_VECTOR (31 downto 0);
    SOP_in : IN STD_LOGIC;
    CDRHOLD_out : OUT STD_LOGIC;
    PacketValid_out : OUT STD_LOGIC );
end;


architecture behav of SOP_CDR_Control is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "SOP_CDR_Control,hls_ip_2017_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu095-ffva2104-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=5.664500,HLS_SYN_LAT=1,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=10,HLS_SYN_LUT=467}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";

    signal CDRHOLD_out_reg : STD_LOGIC_VECTOR (0 downto 0) := "1";
    signal Packet_valid_reg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal NumConsequtiveNoData : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal enable_read_read_fu_132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal CDRHOLD_out_reg_flag_2_fu_902_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal CDRHOLD_out_reg_loc_2_fu_908_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Packet_valid_reg_loc_2_fu_920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal NumConsequtiveNoData_2_fu_926_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_CDRHOLD_out_reg_loc_3_reg_152 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_CDRHOLD_out_reg_loc_3_reg_152 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_Packet_valid_reg_loc_3_reg_162 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_Packet_valid_reg_loc_3_reg_162 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s_fu_896_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal Packet_valid_reg_new_2_fu_914_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal NumConsequtiveNoData_3_fu_932_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_4_fu_180_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_188_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_200_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_212_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_224_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_236_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_248_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_260_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_272_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_284_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_296_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_308_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_320_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_332_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_344_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_356_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_368_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_380_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_392_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_404_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_416_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_428_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_440_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_452_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_464_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_476_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_488_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_500_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_512_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_524_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_536_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_cast_fu_208_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_cast_fu_184_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_cast_fu_196_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp6_fu_556_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp5_fu_562_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_4_cast_fu_232_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_cast_fu_220_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp8_fu_572_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_6_cast_fu_256_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_5_cast_fu_244_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp9_fu_582_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp8_cast_fu_578_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp9_cast_fu_588_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp5_cast_fu_568_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp7_fu_592_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp4_fu_598_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_8_cast_fu_280_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_7_cast_fu_268_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_608_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_10_cast_fu_304_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_9_cast_fu_292_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp1_fu_618_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp12_cast_fu_614_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp13_cast_fu_624_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp2_fu_628_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_12_cast_fu_328_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_11_cast_fu_316_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp11_fu_638_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_14_cast_fu_352_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_13_cast_fu_340_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp12_fu_648_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp15_cast_fu_644_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp16_cast_fu_654_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp13_fu_658_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp11_cast_fu_634_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp14_cast_fu_664_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp4_cast_fu_604_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp10_fu_668_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp3_fu_674_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_16_cast_fu_376_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_15_cast_fu_364_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp14_fu_684_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_18_cast_fu_400_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_17_cast_fu_388_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp15_fu_694_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp20_cast_fu_690_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp21_cast_fu_700_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp16_fu_704_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_20_cast_fu_424_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_cast_fu_412_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp19_fu_714_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_22_cast_fu_448_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_21_cast_fu_436_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp20_fu_724_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp23_cast_fu_720_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp24_cast_fu_730_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp21_fu_734_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp19_cast_fu_710_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp22_cast_fu_740_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp18_fu_744_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_24_cast_fu_472_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_23_cast_fu_460_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp22_fu_754_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_26_cast_fu_496_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_25_cast_fu_484_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp23_fu_764_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp27_cast_fu_760_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp28_cast_fu_770_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp24_fu_774_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_28_cast_fu_520_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_27_cast_fu_508_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp26_fu_784_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_30_cast_fu_544_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_29_cast_fu_532_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp27_fu_794_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp30_cast_fu_790_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp31_cast_fu_800_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp28_fu_804_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp26_cast_fu_780_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp29_cast_fu_810_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp25_fu_814_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp18_cast_fu_750_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp25_cast_fu_820_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp3_cast_fu_680_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp17_fu_824_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_fu_830_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal not_SOP_in_fu_844_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_SOP_in_fu_844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Packet_valid_reg_lo_fu_856_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_548_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_cast_fu_836_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal reg_numones_V_cast_fu_862_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_fu_882_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal NumConsequtiveNoData_1_fu_876_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_882_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_890_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal CDRHOLD_out_reg_flag_2_fu_902_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_CDRHOLD_out_reg_loa_fu_850_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Packet_valid_reg_lo_fu_856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal NumConsequtiveNoData_2_fu_926_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_63 : BOOLEAN;


begin




    NumConsequtiveNoData_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                NumConsequtiveNoData <= ap_const_lv4_0;
            else
                if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = NumConsequtiveNoData_2_fu_926_p2) and (ap_const_lv1_1 = enable_read_read_fu_132_p2))) then 
                    NumConsequtiveNoData <= NumConsequtiveNoData_3_fu_932_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_subdone = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_CDRHOLD_out_reg_loc_3_reg_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_condition_63 = ap_const_boolean_1)) then
                if ((ap_const_lv1_0 = enable_read_read_fu_132_p2)) then 
                    ap_phi_reg_pp0_iter1_CDRHOLD_out_reg_loc_3_reg_152 <= CDRHOLD_out_reg;
                elsif ((ap_const_lv1_1 = enable_read_read_fu_132_p2)) then 
                    ap_phi_reg_pp0_iter1_CDRHOLD_out_reg_loc_3_reg_152 <= CDRHOLD_out_reg_loc_2_fu_908_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_CDRHOLD_out_reg_loc_3_reg_152 <= ap_phi_reg_pp0_iter0_CDRHOLD_out_reg_loc_3_reg_152;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_Packet_valid_reg_loc_3_reg_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_condition_63 = ap_const_boolean_1)) then
                if ((ap_const_lv1_0 = enable_read_read_fu_132_p2)) then 
                    ap_phi_reg_pp0_iter1_Packet_valid_reg_loc_3_reg_162 <= Packet_valid_reg;
                elsif ((ap_const_lv1_1 = enable_read_read_fu_132_p2)) then 
                    ap_phi_reg_pp0_iter1_Packet_valid_reg_loc_3_reg_162 <= Packet_valid_reg_loc_2_fu_920_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_Packet_valid_reg_loc_3_reg_162 <= ap_phi_reg_pp0_iter0_Packet_valid_reg_loc_3_reg_162;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = CDRHOLD_out_reg_flag_2_fu_902_p2) and (ap_const_lv1_1 = enable_read_read_fu_132_p2))) then
                CDRHOLD_out_reg <= p_s_fu_896_p2;
                Packet_valid_reg <= Packet_valid_reg_new_2_fu_914_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    CDRHOLD_out <= ap_phi_reg_pp0_iter1_CDRHOLD_out_reg_loc_3_reg_152(0);
    CDRHOLD_out_reg_flag_2_fu_902_p1 <= (0=>SOP_in, others=>'-');
    CDRHOLD_out_reg_flag_2_fu_902_p2 <= (p_s_fu_896_p2 or CDRHOLD_out_reg_flag_2_fu_902_p1);
    CDRHOLD_out_reg_loc_2_fu_908_p2 <= (p_s_fu_896_p2 or p_CDRHOLD_out_reg_loa_fu_850_p2);
    NumConsequtiveNoData_1_fu_876_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(NumConsequtiveNoData));
    NumConsequtiveNoData_2_fu_926_p1 <= (0=>SOP_in, others=>'-');
    NumConsequtiveNoData_2_fu_926_p2 <= (tmp_s_fu_870_p2 or NumConsequtiveNoData_2_fu_926_p1);
    NumConsequtiveNoData_3_fu_932_p3 <= 
        tmp_2_fu_882_p3 when (tmp_s_fu_870_p2(0) = '1') else 
        ap_const_lv4_0;
    PacketValid_out <= ap_phi_reg_pp0_iter1_Packet_valid_reg_loc_3_reg_162(0);
    Packet_valid_reg_loc_2_fu_920_p2 <= (p_Packet_valid_reg_lo_fu_856_p2 and Packet_valid_reg_new_2_fu_914_p2);
    Packet_valid_reg_new_2_fu_914_p2 <= (p_s_fu_896_p2 xor ap_const_lv1_1);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_63_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_63 <= ((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = ap_const_logic_1))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_CDRHOLD_out_reg_loc_3_reg_152 <= "X";
    ap_phi_reg_pp0_iter0_Packet_valid_reg_loc_3_reg_162 <= "X";
    ap_reset_idle_pp0 <= ap_const_logic_0;
    enable_read_read_fu_132_p2 <= (0=>enable, others=>'-');
    not_SOP_in_fu_844_p0 <= (0=>SOP_in, others=>'-');
    not_SOP_in_fu_844_p2 <= (not_SOP_in_fu_844_p0 xor ap_const_lv1_1);
    p_CDRHOLD_out_reg_loa_fu_850_p2 <= (not_SOP_in_fu_844_p2 and CDRHOLD_out_reg);
    p_Packet_valid_reg_lo_fu_856_p1 <= (0=>SOP_in, others=>'-');
    p_Packet_valid_reg_lo_fu_856_p2 <= (p_Packet_valid_reg_lo_fu_856_p1 or Packet_valid_reg);
    p_s_fu_896_p2 <= (tmp_s_fu_870_p2 and tmp_3_fu_890_p2);
    reg_numones_V_cast_fu_862_p3 <= 
        ap_const_lv6_3F when (tmp_35_fu_548_p3(0) = '1') else 
        ap_const_lv6_0;
    tmp10_fu_668_p2 <= std_logic_vector(unsigned(tmp11_cast_fu_634_p1) + unsigned(tmp14_cast_fu_664_p1));
    tmp11_cast_fu_634_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp2_fu_628_p2),4));
    tmp11_fu_638_p2 <= std_logic_vector(unsigned(tmp_12_cast_fu_328_p1) + unsigned(tmp_11_cast_fu_316_p1));
    tmp12_cast_fu_614_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_608_p2),3));
    tmp12_fu_648_p2 <= std_logic_vector(unsigned(tmp_14_cast_fu_352_p1) + unsigned(tmp_13_cast_fu_340_p1));
    tmp13_cast_fu_624_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp1_fu_618_p2),3));
    tmp13_fu_658_p2 <= std_logic_vector(unsigned(tmp15_cast_fu_644_p1) + unsigned(tmp16_cast_fu_654_p1));
    tmp14_cast_fu_664_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp13_fu_658_p2),4));
    tmp14_fu_684_p2 <= std_logic_vector(unsigned(tmp_16_cast_fu_376_p1) + unsigned(tmp_15_cast_fu_364_p1));
    tmp15_cast_fu_644_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp11_fu_638_p2),3));
    tmp15_fu_694_p2 <= std_logic_vector(unsigned(tmp_18_cast_fu_400_p1) + unsigned(tmp_17_cast_fu_388_p1));
    tmp16_cast_fu_654_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp12_fu_648_p2),3));
    tmp16_fu_704_p2 <= std_logic_vector(unsigned(tmp20_cast_fu_690_p1) + unsigned(tmp21_cast_fu_700_p1));
    tmp17_fu_824_p2 <= std_logic_vector(unsigned(tmp18_cast_fu_750_p1) + unsigned(tmp25_cast_fu_820_p1));
    tmp18_cast_fu_750_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp18_fu_744_p2),5));
    tmp18_fu_744_p2 <= std_logic_vector(unsigned(tmp19_cast_fu_710_p1) + unsigned(tmp22_cast_fu_740_p1));
    tmp19_cast_fu_710_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp16_fu_704_p2),4));
    tmp19_fu_714_p2 <= std_logic_vector(unsigned(tmp_20_cast_fu_424_p1) + unsigned(tmp_19_cast_fu_412_p1));
    tmp1_fu_618_p2 <= std_logic_vector(unsigned(tmp_10_cast_fu_304_p1) + unsigned(tmp_9_cast_fu_292_p1));
    tmp20_cast_fu_690_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp14_fu_684_p2),3));
    tmp20_fu_724_p2 <= std_logic_vector(unsigned(tmp_22_cast_fu_448_p1) + unsigned(tmp_21_cast_fu_436_p1));
    tmp21_cast_fu_700_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp15_fu_694_p2),3));
    tmp21_fu_734_p2 <= std_logic_vector(unsigned(tmp23_cast_fu_720_p1) + unsigned(tmp24_cast_fu_730_p1));
    tmp22_cast_fu_740_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp21_fu_734_p2),4));
    tmp22_fu_754_p2 <= std_logic_vector(unsigned(tmp_24_cast_fu_472_p1) + unsigned(tmp_23_cast_fu_460_p1));
    tmp23_cast_fu_720_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp19_fu_714_p2),3));
    tmp23_fu_764_p2 <= std_logic_vector(unsigned(tmp_26_cast_fu_496_p1) + unsigned(tmp_25_cast_fu_484_p1));
    tmp24_cast_fu_730_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp20_fu_724_p2),3));
    tmp24_fu_774_p2 <= std_logic_vector(unsigned(tmp27_cast_fu_760_p1) + unsigned(tmp28_cast_fu_770_p1));
    tmp25_cast_fu_820_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp25_fu_814_p2),5));
    tmp25_fu_814_p2 <= std_logic_vector(unsigned(tmp26_cast_fu_780_p1) + unsigned(tmp29_cast_fu_810_p1));
    tmp26_cast_fu_780_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp24_fu_774_p2),4));
    tmp26_fu_784_p2 <= std_logic_vector(unsigned(tmp_28_cast_fu_520_p1) + unsigned(tmp_27_cast_fu_508_p1));
    tmp27_cast_fu_760_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp22_fu_754_p2),3));
    tmp27_fu_794_p2 <= std_logic_vector(unsigned(tmp_30_cast_fu_544_p1) + unsigned(tmp_29_cast_fu_532_p1));
    tmp28_cast_fu_770_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp23_fu_764_p2),3));
    tmp28_fu_804_p2 <= std_logic_vector(unsigned(tmp30_cast_fu_790_p1) + unsigned(tmp31_cast_fu_800_p1));
    tmp29_cast_fu_810_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp28_fu_804_p2),4));
    tmp2_fu_628_p2 <= std_logic_vector(unsigned(tmp12_cast_fu_614_p1) + unsigned(tmp13_cast_fu_624_p1));
    tmp30_cast_fu_790_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp26_fu_784_p2),3));
    tmp31_cast_fu_800_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp27_fu_794_p2),3));
    tmp3_cast_fu_680_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp3_fu_674_p2),5));
    tmp3_fu_674_p2 <= std_logic_vector(unsigned(tmp4_cast_fu_604_p1) + unsigned(tmp10_fu_668_p2));
    tmp4_cast_fu_604_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp4_fu_598_p2),4));
    tmp4_fu_598_p2 <= std_logic_vector(unsigned(tmp5_cast_fu_568_p1) + unsigned(tmp7_fu_592_p2));
    tmp5_cast_fu_568_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp5_fu_562_p2),3));
    tmp5_fu_562_p2 <= std_logic_vector(unsigned(tmp_1_cast_fu_196_p1) + unsigned(tmp6_fu_556_p2));
    tmp6_fu_556_p2 <= std_logic_vector(unsigned(tmp_2_cast_fu_208_p1) + unsigned(tmp_cast_fu_184_p1));
    tmp7_fu_592_p2 <= std_logic_vector(unsigned(tmp8_cast_fu_578_p1) + unsigned(tmp9_cast_fu_588_p1));
    tmp8_cast_fu_578_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp8_fu_572_p2),3));
    tmp8_fu_572_p2 <= std_logic_vector(unsigned(tmp_4_cast_fu_232_p1) + unsigned(tmp_3_cast_fu_220_p1));
    tmp9_cast_fu_588_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp9_fu_582_p2),3));
    tmp9_fu_582_p2 <= std_logic_vector(unsigned(tmp_6_cast_fu_256_p1) + unsigned(tmp_5_cast_fu_244_p1));
    tmp_10_cast_fu_304_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_fu_296_p3),2));
    tmp_10_fu_248_p3 <= TDATAin_V(6 downto 6);
    tmp_11_cast_fu_316_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_fu_308_p3),2));
    tmp_11_fu_260_p3 <= TDATAin_V(7 downto 7);
    tmp_12_cast_fu_328_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_16_fu_320_p3),2));
    tmp_12_fu_272_p3 <= TDATAin_V(8 downto 8);
    tmp_13_cast_fu_340_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_17_fu_332_p3),2));
    tmp_13_fu_284_p3 <= TDATAin_V(9 downto 9);
    tmp_14_cast_fu_352_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_18_fu_344_p3),2));
    tmp_14_fu_296_p3 <= TDATAin_V(10 downto 10);
    tmp_15_cast_fu_364_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_19_fu_356_p3),2));
    tmp_15_fu_308_p3 <= TDATAin_V(11 downto 11);
    tmp_16_cast_fu_376_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_fu_368_p3),2));
    tmp_16_fu_320_p3 <= TDATAin_V(12 downto 12);
    tmp_17_cast_fu_388_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_21_fu_380_p3),2));
    tmp_17_fu_332_p3 <= TDATAin_V(13 downto 13);
    tmp_18_cast_fu_400_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_22_fu_392_p3),2));
    tmp_18_fu_344_p3 <= TDATAin_V(14 downto 14);
    tmp_19_cast_fu_412_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_23_fu_404_p3),2));
    tmp_19_fu_356_p3 <= TDATAin_V(15 downto 15);
    tmp_1_cast_fu_196_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_188_p3),2));
    tmp_1_fu_830_p2 <= std_logic_vector(unsigned(tmp3_cast_fu_680_p1) + unsigned(tmp17_fu_824_p2));
    tmp_20_cast_fu_424_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_fu_416_p3),2));
    tmp_20_fu_368_p3 <= TDATAin_V(16 downto 16);
    tmp_21_cast_fu_436_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_25_fu_428_p3),2));
    tmp_21_fu_380_p3 <= TDATAin_V(17 downto 17);
    tmp_22_cast_fu_448_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_26_fu_440_p3),2));
    tmp_22_fu_392_p3 <= TDATAin_V(18 downto 18);
    tmp_23_cast_fu_460_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_fu_452_p3),2));
    tmp_23_fu_404_p3 <= TDATAin_V(19 downto 19);
    tmp_24_cast_fu_472_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_fu_464_p3),2));
    tmp_24_fu_416_p3 <= TDATAin_V(20 downto 20);
    tmp_25_cast_fu_484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_fu_476_p3),2));
    tmp_25_fu_428_p3 <= TDATAin_V(21 downto 21);
    tmp_26_cast_fu_496_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_fu_488_p3),2));
    tmp_26_fu_440_p3 <= TDATAin_V(22 downto 22);
    tmp_27_cast_fu_508_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_31_fu_500_p3),2));
    tmp_27_fu_452_p3 <= TDATAin_V(23 downto 23);
    tmp_28_cast_fu_520_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_32_fu_512_p3),2));
    tmp_28_fu_464_p3 <= TDATAin_V(24 downto 24);
    tmp_29_cast_fu_532_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_fu_524_p3),2));
    tmp_29_fu_476_p3 <= TDATAin_V(25 downto 25);
    tmp_2_cast_fu_208_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_200_p3),2));
    tmp_2_fu_882_p0 <= (0=>SOP_in, others=>'-');
    tmp_2_fu_882_p3 <= 
        ap_const_lv4_1 when (tmp_2_fu_882_p0(0) = '1') else 
        NumConsequtiveNoData_1_fu_876_p2;
    tmp_30_cast_fu_544_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_fu_536_p3),2));
    tmp_30_fu_488_p3 <= TDATAin_V(26 downto 26);
    tmp_31_fu_500_p3 <= TDATAin_V(27 downto 27);
    tmp_32_fu_512_p3 <= TDATAin_V(28 downto 28);
    tmp_33_fu_524_p3 <= TDATAin_V(29 downto 29);
    tmp_34_fu_536_p3 <= TDATAin_V(30 downto 30);
    tmp_35_fu_548_p3 <= TDATAin_V(31 downto 31);
    tmp_3_cast_fu_220_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_212_p3),2));
    tmp_3_fu_890_p2 <= "1" when (unsigned(tmp_2_fu_882_p3) > unsigned(ap_const_lv4_4)) else "0";
    tmp_4_cast_fu_232_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_224_p3),2));
    tmp_4_fu_180_p1 <= TDATAin_V(1 - 1 downto 0);
    tmp_5_cast_fu_244_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_236_p3),2));
    tmp_5_fu_188_p3 <= TDATAin_V(1 downto 1);
    tmp_60_cast_fu_836_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_830_p2),6));
    tmp_6_cast_fu_256_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_248_p3),2));
    tmp_6_fu_200_p3 <= TDATAin_V(2 downto 2);
    tmp_7_cast_fu_268_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_260_p3),2));
    tmp_7_fu_212_p3 <= TDATAin_V(3 downto 3);
    tmp_8_cast_fu_280_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_272_p3),2));
    tmp_8_fu_224_p3 <= TDATAin_V(4 downto 4);
    tmp_9_cast_fu_292_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_fu_284_p3),2));
    tmp_9_fu_236_p3 <= TDATAin_V(5 downto 5);
    tmp_cast_fu_184_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_180_p1),2));
    tmp_fu_608_p2 <= std_logic_vector(unsigned(tmp_8_cast_fu_280_p1) + unsigned(tmp_7_cast_fu_268_p1));
    tmp_s_fu_870_p2 <= "1" when (tmp_60_cast_fu_836_p1 = reg_numones_V_cast_fu_862_p3) else "0";
end behav;
