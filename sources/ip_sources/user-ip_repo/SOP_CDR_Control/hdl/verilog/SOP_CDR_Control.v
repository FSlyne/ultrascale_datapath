// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.3
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="SOP_CDR_Control,hls_ip_2017_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu095-ffva2104-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=5.664500,HLS_SYN_LAT=1,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=10,HLS_SYN_LUT=467}" *)

module SOP_CDR_Control (
        ap_clk,
        ap_rst,
        enable,
        TDATAin_V,
        SOP_in,
        CDRHOLD_out,
        PacketValid_out
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   enable;
input  [31:0] TDATAin_V;
input   SOP_in;
output   CDRHOLD_out;
output   PacketValid_out;

reg   [0:0] CDRHOLD_out_reg;
reg   [0:0] Packet_valid_reg;
reg   [3:0] NumConsequtiveNoData;
wire   [0:0] enable_read_read_fu_132_p2;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] CDRHOLD_out_reg_flag_2_fu_902_p2;
wire   [0:0] CDRHOLD_out_reg_loc_2_fu_908_p2;
wire   [0:0] Packet_valid_reg_loc_2_fu_920_p2;
wire   [0:0] NumConsequtiveNoData_2_fu_926_p2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] ap_phi_reg_pp0_iter0_CDRHOLD_out_reg_loc_3_reg_152;
reg   [0:0] ap_phi_reg_pp0_iter1_CDRHOLD_out_reg_loc_3_reg_152;
wire   [0:0] ap_phi_reg_pp0_iter0_Packet_valid_reg_loc_3_reg_162;
reg   [0:0] ap_phi_reg_pp0_iter1_Packet_valid_reg_loc_3_reg_162;
wire   [0:0] p_s_fu_896_p2;
wire    ap_block_pp0_stage0;
wire   [0:0] Packet_valid_reg_new_2_fu_914_p2;
wire   [3:0] NumConsequtiveNoData_3_fu_932_p3;
wire    ap_block_pp0_stage0_01001;
wire   [0:0] tmp_4_fu_180_p1;
wire   [0:0] tmp_5_fu_188_p3;
wire   [0:0] tmp_6_fu_200_p3;
wire   [0:0] tmp_7_fu_212_p3;
wire   [0:0] tmp_8_fu_224_p3;
wire   [0:0] tmp_9_fu_236_p3;
wire   [0:0] tmp_10_fu_248_p3;
wire   [0:0] tmp_11_fu_260_p3;
wire   [0:0] tmp_12_fu_272_p3;
wire   [0:0] tmp_13_fu_284_p3;
wire   [0:0] tmp_14_fu_296_p3;
wire   [0:0] tmp_15_fu_308_p3;
wire   [0:0] tmp_16_fu_320_p3;
wire   [0:0] tmp_17_fu_332_p3;
wire   [0:0] tmp_18_fu_344_p3;
wire   [0:0] tmp_19_fu_356_p3;
wire   [0:0] tmp_20_fu_368_p3;
wire   [0:0] tmp_21_fu_380_p3;
wire   [0:0] tmp_22_fu_392_p3;
wire   [0:0] tmp_23_fu_404_p3;
wire   [0:0] tmp_24_fu_416_p3;
wire   [0:0] tmp_25_fu_428_p3;
wire   [0:0] tmp_26_fu_440_p3;
wire   [0:0] tmp_27_fu_452_p3;
wire   [0:0] tmp_28_fu_464_p3;
wire   [0:0] tmp_29_fu_476_p3;
wire   [0:0] tmp_30_fu_488_p3;
wire   [0:0] tmp_31_fu_500_p3;
wire   [0:0] tmp_32_fu_512_p3;
wire   [0:0] tmp_33_fu_524_p3;
wire   [0:0] tmp_34_fu_536_p3;
wire   [1:0] tmp_2_cast_fu_208_p1;
wire   [1:0] tmp_cast_fu_184_p1;
wire   [1:0] tmp_1_cast_fu_196_p1;
wire   [1:0] tmp6_fu_556_p2;
wire   [1:0] tmp5_fu_562_p2;
wire   [1:0] tmp_4_cast_fu_232_p1;
wire   [1:0] tmp_3_cast_fu_220_p1;
wire   [1:0] tmp8_fu_572_p2;
wire   [1:0] tmp_6_cast_fu_256_p1;
wire   [1:0] tmp_5_cast_fu_244_p1;
wire   [1:0] tmp9_fu_582_p2;
wire   [2:0] tmp8_cast_fu_578_p1;
wire   [2:0] tmp9_cast_fu_588_p1;
wire   [2:0] tmp5_cast_fu_568_p1;
wire   [2:0] tmp7_fu_592_p2;
wire   [2:0] tmp4_fu_598_p2;
wire   [1:0] tmp_8_cast_fu_280_p1;
wire   [1:0] tmp_7_cast_fu_268_p1;
wire   [1:0] tmp_fu_608_p2;
wire   [1:0] tmp_10_cast_fu_304_p1;
wire   [1:0] tmp_9_cast_fu_292_p1;
wire   [1:0] tmp1_fu_618_p2;
wire   [2:0] tmp12_cast_fu_614_p1;
wire   [2:0] tmp13_cast_fu_624_p1;
wire   [2:0] tmp2_fu_628_p2;
wire   [1:0] tmp_12_cast_fu_328_p1;
wire   [1:0] tmp_11_cast_fu_316_p1;
wire   [1:0] tmp11_fu_638_p2;
wire   [1:0] tmp_14_cast_fu_352_p1;
wire   [1:0] tmp_13_cast_fu_340_p1;
wire   [1:0] tmp12_fu_648_p2;
wire   [2:0] tmp15_cast_fu_644_p1;
wire   [2:0] tmp16_cast_fu_654_p1;
wire   [2:0] tmp13_fu_658_p2;
wire   [3:0] tmp11_cast_fu_634_p1;
wire   [3:0] tmp14_cast_fu_664_p1;
wire   [3:0] tmp4_cast_fu_604_p1;
wire   [3:0] tmp10_fu_668_p2;
wire   [3:0] tmp3_fu_674_p2;
wire   [1:0] tmp_16_cast_fu_376_p1;
wire   [1:0] tmp_15_cast_fu_364_p1;
wire   [1:0] tmp14_fu_684_p2;
wire   [1:0] tmp_18_cast_fu_400_p1;
wire   [1:0] tmp_17_cast_fu_388_p1;
wire   [1:0] tmp15_fu_694_p2;
wire   [2:0] tmp20_cast_fu_690_p1;
wire   [2:0] tmp21_cast_fu_700_p1;
wire   [2:0] tmp16_fu_704_p2;
wire   [1:0] tmp_20_cast_fu_424_p1;
wire   [1:0] tmp_19_cast_fu_412_p1;
wire   [1:0] tmp19_fu_714_p2;
wire   [1:0] tmp_22_cast_fu_448_p1;
wire   [1:0] tmp_21_cast_fu_436_p1;
wire   [1:0] tmp20_fu_724_p2;
wire   [2:0] tmp23_cast_fu_720_p1;
wire   [2:0] tmp24_cast_fu_730_p1;
wire   [2:0] tmp21_fu_734_p2;
wire   [3:0] tmp19_cast_fu_710_p1;
wire   [3:0] tmp22_cast_fu_740_p1;
wire   [3:0] tmp18_fu_744_p2;
wire   [1:0] tmp_24_cast_fu_472_p1;
wire   [1:0] tmp_23_cast_fu_460_p1;
wire   [1:0] tmp22_fu_754_p2;
wire   [1:0] tmp_26_cast_fu_496_p1;
wire   [1:0] tmp_25_cast_fu_484_p1;
wire   [1:0] tmp23_fu_764_p2;
wire   [2:0] tmp27_cast_fu_760_p1;
wire   [2:0] tmp28_cast_fu_770_p1;
wire   [2:0] tmp24_fu_774_p2;
wire   [1:0] tmp_28_cast_fu_520_p1;
wire   [1:0] tmp_27_cast_fu_508_p1;
wire   [1:0] tmp26_fu_784_p2;
wire   [1:0] tmp_30_cast_fu_544_p1;
wire   [1:0] tmp_29_cast_fu_532_p1;
wire   [1:0] tmp27_fu_794_p2;
wire   [2:0] tmp30_cast_fu_790_p1;
wire   [2:0] tmp31_cast_fu_800_p1;
wire   [2:0] tmp28_fu_804_p2;
wire   [3:0] tmp26_cast_fu_780_p1;
wire   [3:0] tmp29_cast_fu_810_p1;
wire   [3:0] tmp25_fu_814_p2;
wire   [4:0] tmp18_cast_fu_750_p1;
wire   [4:0] tmp25_cast_fu_820_p1;
wire   [4:0] tmp3_cast_fu_680_p1;
wire   [4:0] tmp17_fu_824_p2;
wire   [4:0] tmp_1_fu_830_p2;
wire   [0:0] not_SOP_in_fu_844_p0;
wire   [0:0] not_SOP_in_fu_844_p2;
wire   [0:0] p_Packet_valid_reg_lo_fu_856_p1;
wire   [0:0] tmp_35_fu_548_p3;
wire   [5:0] tmp_60_cast_fu_836_p1;
wire   [5:0] reg_numones_V_cast_fu_862_p3;
wire   [0:0] tmp_2_fu_882_p0;
wire   [3:0] NumConsequtiveNoData_1_fu_876_p2;
wire   [3:0] tmp_2_fu_882_p3;
wire   [0:0] tmp_s_fu_870_p2;
wire   [0:0] tmp_3_fu_890_p2;
wire   [0:0] CDRHOLD_out_reg_flag_2_fu_902_p1;
wire   [0:0] p_CDRHOLD_out_reg_loa_fu_850_p2;
wire   [0:0] p_Packet_valid_reg_lo_fu_856_p2;
wire   [0:0] NumConsequtiveNoData_2_fu_926_p1;
reg   [0:0] ap_NS_fsm;
wire    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_63;

// power-on initialization
initial begin
#0 CDRHOLD_out_reg = 1'd1;
#0 Packet_valid_reg = 1'd0;
#0 NumConsequtiveNoData = 4'd0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        NumConsequtiveNoData <= 4'd0;
    end else begin
        if (((ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == NumConsequtiveNoData_2_fu_926_p2) & (1'd1 == enable_read_read_fu_132_p2))) begin
            NumConsequtiveNoData <= NumConsequtiveNoData_3_fu_932_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_63 == 1'b1)) begin
        if ((1'd0 == enable_read_read_fu_132_p2)) begin
            ap_phi_reg_pp0_iter1_CDRHOLD_out_reg_loc_3_reg_152 <= CDRHOLD_out_reg;
        end else if ((1'd1 == enable_read_read_fu_132_p2)) begin
            ap_phi_reg_pp0_iter1_CDRHOLD_out_reg_loc_3_reg_152 <= CDRHOLD_out_reg_loc_2_fu_908_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_CDRHOLD_out_reg_loc_3_reg_152 <= ap_phi_reg_pp0_iter0_CDRHOLD_out_reg_loc_3_reg_152;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_63 == 1'b1)) begin
        if ((1'd0 == enable_read_read_fu_132_p2)) begin
            ap_phi_reg_pp0_iter1_Packet_valid_reg_loc_3_reg_162 <= Packet_valid_reg;
        end else if ((1'd1 == enable_read_read_fu_132_p2)) begin
            ap_phi_reg_pp0_iter1_Packet_valid_reg_loc_3_reg_162 <= Packet_valid_reg_loc_2_fu_920_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_Packet_valid_reg_loc_3_reg_162 <= ap_phi_reg_pp0_iter0_Packet_valid_reg_loc_3_reg_162;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == CDRHOLD_out_reg_flag_2_fu_902_p2) & (1'd1 == enable_read_read_fu_132_p2))) begin
        CDRHOLD_out_reg <= p_s_fu_896_p2;
        Packet_valid_reg <= Packet_valid_reg_new_2_fu_914_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == 1'b1))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign CDRHOLD_out = ap_phi_reg_pp0_iter1_CDRHOLD_out_reg_loc_3_reg_152;

assign CDRHOLD_out_reg_flag_2_fu_902_p1 = SOP_in;

assign CDRHOLD_out_reg_flag_2_fu_902_p2 = (p_s_fu_896_p2 | CDRHOLD_out_reg_flag_2_fu_902_p1);

assign CDRHOLD_out_reg_loc_2_fu_908_p2 = (p_s_fu_896_p2 | p_CDRHOLD_out_reg_loa_fu_850_p2);

assign NumConsequtiveNoData_1_fu_876_p2 = (4'd1 + NumConsequtiveNoData);

assign NumConsequtiveNoData_2_fu_926_p1 = SOP_in;

assign NumConsequtiveNoData_2_fu_926_p2 = (tmp_s_fu_870_p2 | NumConsequtiveNoData_2_fu_926_p1);

assign NumConsequtiveNoData_3_fu_932_p3 = ((tmp_s_fu_870_p2[0:0] === 1'b1) ? tmp_2_fu_882_p3 : 4'd0);

assign PacketValid_out = ap_phi_reg_pp0_iter1_Packet_valid_reg_loc_3_reg_162;

assign Packet_valid_reg_loc_2_fu_920_p2 = (p_Packet_valid_reg_lo_fu_856_p2 & Packet_valid_reg_new_2_fu_914_p2);

assign Packet_valid_reg_new_2_fu_914_p2 = (p_s_fu_896_p2 ^ 1'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_63 = ((ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_CDRHOLD_out_reg_loc_3_reg_152 = 'bx;

assign ap_phi_reg_pp0_iter0_Packet_valid_reg_loc_3_reg_162 = 'bx;

assign enable_read_read_fu_132_p2 = enable;

assign not_SOP_in_fu_844_p0 = SOP_in;

assign not_SOP_in_fu_844_p2 = (not_SOP_in_fu_844_p0 ^ 1'd1);

assign p_CDRHOLD_out_reg_loa_fu_850_p2 = (not_SOP_in_fu_844_p2 & CDRHOLD_out_reg);

assign p_Packet_valid_reg_lo_fu_856_p1 = SOP_in;

assign p_Packet_valid_reg_lo_fu_856_p2 = (p_Packet_valid_reg_lo_fu_856_p1 | Packet_valid_reg);

assign p_s_fu_896_p2 = (tmp_s_fu_870_p2 & tmp_3_fu_890_p2);

assign reg_numones_V_cast_fu_862_p3 = ((tmp_35_fu_548_p3[0:0] === 1'b1) ? 6'd63 : 6'd0);

assign tmp10_fu_668_p2 = (tmp11_cast_fu_634_p1 + tmp14_cast_fu_664_p1);

assign tmp11_cast_fu_634_p1 = tmp2_fu_628_p2;

assign tmp11_fu_638_p2 = (tmp_12_cast_fu_328_p1 + tmp_11_cast_fu_316_p1);

assign tmp12_cast_fu_614_p1 = tmp_fu_608_p2;

assign tmp12_fu_648_p2 = (tmp_14_cast_fu_352_p1 + tmp_13_cast_fu_340_p1);

assign tmp13_cast_fu_624_p1 = tmp1_fu_618_p2;

assign tmp13_fu_658_p2 = (tmp15_cast_fu_644_p1 + tmp16_cast_fu_654_p1);

assign tmp14_cast_fu_664_p1 = tmp13_fu_658_p2;

assign tmp14_fu_684_p2 = (tmp_16_cast_fu_376_p1 + tmp_15_cast_fu_364_p1);

assign tmp15_cast_fu_644_p1 = tmp11_fu_638_p2;

assign tmp15_fu_694_p2 = (tmp_18_cast_fu_400_p1 + tmp_17_cast_fu_388_p1);

assign tmp16_cast_fu_654_p1 = tmp12_fu_648_p2;

assign tmp16_fu_704_p2 = (tmp20_cast_fu_690_p1 + tmp21_cast_fu_700_p1);

assign tmp17_fu_824_p2 = (tmp18_cast_fu_750_p1 + tmp25_cast_fu_820_p1);

assign tmp18_cast_fu_750_p1 = tmp18_fu_744_p2;

assign tmp18_fu_744_p2 = (tmp19_cast_fu_710_p1 + tmp22_cast_fu_740_p1);

assign tmp19_cast_fu_710_p1 = tmp16_fu_704_p2;

assign tmp19_fu_714_p2 = (tmp_20_cast_fu_424_p1 + tmp_19_cast_fu_412_p1);

assign tmp1_fu_618_p2 = (tmp_10_cast_fu_304_p1 + tmp_9_cast_fu_292_p1);

assign tmp20_cast_fu_690_p1 = tmp14_fu_684_p2;

assign tmp20_fu_724_p2 = (tmp_22_cast_fu_448_p1 + tmp_21_cast_fu_436_p1);

assign tmp21_cast_fu_700_p1 = tmp15_fu_694_p2;

assign tmp21_fu_734_p2 = (tmp23_cast_fu_720_p1 + tmp24_cast_fu_730_p1);

assign tmp22_cast_fu_740_p1 = tmp21_fu_734_p2;

assign tmp22_fu_754_p2 = (tmp_24_cast_fu_472_p1 + tmp_23_cast_fu_460_p1);

assign tmp23_cast_fu_720_p1 = tmp19_fu_714_p2;

assign tmp23_fu_764_p2 = (tmp_26_cast_fu_496_p1 + tmp_25_cast_fu_484_p1);

assign tmp24_cast_fu_730_p1 = tmp20_fu_724_p2;

assign tmp24_fu_774_p2 = (tmp27_cast_fu_760_p1 + tmp28_cast_fu_770_p1);

assign tmp25_cast_fu_820_p1 = tmp25_fu_814_p2;

assign tmp25_fu_814_p2 = (tmp26_cast_fu_780_p1 + tmp29_cast_fu_810_p1);

assign tmp26_cast_fu_780_p1 = tmp24_fu_774_p2;

assign tmp26_fu_784_p2 = (tmp_28_cast_fu_520_p1 + tmp_27_cast_fu_508_p1);

assign tmp27_cast_fu_760_p1 = tmp22_fu_754_p2;

assign tmp27_fu_794_p2 = (tmp_30_cast_fu_544_p1 + tmp_29_cast_fu_532_p1);

assign tmp28_cast_fu_770_p1 = tmp23_fu_764_p2;

assign tmp28_fu_804_p2 = (tmp30_cast_fu_790_p1 + tmp31_cast_fu_800_p1);

assign tmp29_cast_fu_810_p1 = tmp28_fu_804_p2;

assign tmp2_fu_628_p2 = (tmp12_cast_fu_614_p1 + tmp13_cast_fu_624_p1);

assign tmp30_cast_fu_790_p1 = tmp26_fu_784_p2;

assign tmp31_cast_fu_800_p1 = tmp27_fu_794_p2;

assign tmp3_cast_fu_680_p1 = tmp3_fu_674_p2;

assign tmp3_fu_674_p2 = (tmp4_cast_fu_604_p1 + tmp10_fu_668_p2);

assign tmp4_cast_fu_604_p1 = tmp4_fu_598_p2;

assign tmp4_fu_598_p2 = (tmp5_cast_fu_568_p1 + tmp7_fu_592_p2);

assign tmp5_cast_fu_568_p1 = tmp5_fu_562_p2;

assign tmp5_fu_562_p2 = (tmp_1_cast_fu_196_p1 + tmp6_fu_556_p2);

assign tmp6_fu_556_p2 = (tmp_2_cast_fu_208_p1 + tmp_cast_fu_184_p1);

assign tmp7_fu_592_p2 = (tmp8_cast_fu_578_p1 + tmp9_cast_fu_588_p1);

assign tmp8_cast_fu_578_p1 = tmp8_fu_572_p2;

assign tmp8_fu_572_p2 = (tmp_4_cast_fu_232_p1 + tmp_3_cast_fu_220_p1);

assign tmp9_cast_fu_588_p1 = tmp9_fu_582_p2;

assign tmp9_fu_582_p2 = (tmp_6_cast_fu_256_p1 + tmp_5_cast_fu_244_p1);

assign tmp_10_cast_fu_304_p1 = tmp_14_fu_296_p3;

assign tmp_10_fu_248_p3 = TDATAin_V[32'd6];

assign tmp_11_cast_fu_316_p1 = tmp_15_fu_308_p3;

assign tmp_11_fu_260_p3 = TDATAin_V[32'd7];

assign tmp_12_cast_fu_328_p1 = tmp_16_fu_320_p3;

assign tmp_12_fu_272_p3 = TDATAin_V[32'd8];

assign tmp_13_cast_fu_340_p1 = tmp_17_fu_332_p3;

assign tmp_13_fu_284_p3 = TDATAin_V[32'd9];

assign tmp_14_cast_fu_352_p1 = tmp_18_fu_344_p3;

assign tmp_14_fu_296_p3 = TDATAin_V[32'd10];

assign tmp_15_cast_fu_364_p1 = tmp_19_fu_356_p3;

assign tmp_15_fu_308_p3 = TDATAin_V[32'd11];

assign tmp_16_cast_fu_376_p1 = tmp_20_fu_368_p3;

assign tmp_16_fu_320_p3 = TDATAin_V[32'd12];

assign tmp_17_cast_fu_388_p1 = tmp_21_fu_380_p3;

assign tmp_17_fu_332_p3 = TDATAin_V[32'd13];

assign tmp_18_cast_fu_400_p1 = tmp_22_fu_392_p3;

assign tmp_18_fu_344_p3 = TDATAin_V[32'd14];

assign tmp_19_cast_fu_412_p1 = tmp_23_fu_404_p3;

assign tmp_19_fu_356_p3 = TDATAin_V[32'd15];

assign tmp_1_cast_fu_196_p1 = tmp_5_fu_188_p3;

assign tmp_1_fu_830_p2 = (tmp3_cast_fu_680_p1 + tmp17_fu_824_p2);

assign tmp_20_cast_fu_424_p1 = tmp_24_fu_416_p3;

assign tmp_20_fu_368_p3 = TDATAin_V[32'd16];

assign tmp_21_cast_fu_436_p1 = tmp_25_fu_428_p3;

assign tmp_21_fu_380_p3 = TDATAin_V[32'd17];

assign tmp_22_cast_fu_448_p1 = tmp_26_fu_440_p3;

assign tmp_22_fu_392_p3 = TDATAin_V[32'd18];

assign tmp_23_cast_fu_460_p1 = tmp_27_fu_452_p3;

assign tmp_23_fu_404_p3 = TDATAin_V[32'd19];

assign tmp_24_cast_fu_472_p1 = tmp_28_fu_464_p3;

assign tmp_24_fu_416_p3 = TDATAin_V[32'd20];

assign tmp_25_cast_fu_484_p1 = tmp_29_fu_476_p3;

assign tmp_25_fu_428_p3 = TDATAin_V[32'd21];

assign tmp_26_cast_fu_496_p1 = tmp_30_fu_488_p3;

assign tmp_26_fu_440_p3 = TDATAin_V[32'd22];

assign tmp_27_cast_fu_508_p1 = tmp_31_fu_500_p3;

assign tmp_27_fu_452_p3 = TDATAin_V[32'd23];

assign tmp_28_cast_fu_520_p1 = tmp_32_fu_512_p3;

assign tmp_28_fu_464_p3 = TDATAin_V[32'd24];

assign tmp_29_cast_fu_532_p1 = tmp_33_fu_524_p3;

assign tmp_29_fu_476_p3 = TDATAin_V[32'd25];

assign tmp_2_cast_fu_208_p1 = tmp_6_fu_200_p3;

assign tmp_2_fu_882_p0 = SOP_in;

assign tmp_2_fu_882_p3 = ((tmp_2_fu_882_p0[0:0] === 1'b1) ? 4'd1 : NumConsequtiveNoData_1_fu_876_p2);

assign tmp_30_cast_fu_544_p1 = tmp_34_fu_536_p3;

assign tmp_30_fu_488_p3 = TDATAin_V[32'd26];

assign tmp_31_fu_500_p3 = TDATAin_V[32'd27];

assign tmp_32_fu_512_p3 = TDATAin_V[32'd28];

assign tmp_33_fu_524_p3 = TDATAin_V[32'd29];

assign tmp_34_fu_536_p3 = TDATAin_V[32'd30];

assign tmp_35_fu_548_p3 = TDATAin_V[32'd31];

assign tmp_3_cast_fu_220_p1 = tmp_7_fu_212_p3;

assign tmp_3_fu_890_p2 = ((tmp_2_fu_882_p3 > 4'd4) ? 1'b1 : 1'b0);

assign tmp_4_cast_fu_232_p1 = tmp_8_fu_224_p3;

assign tmp_4_fu_180_p1 = TDATAin_V[0:0];

assign tmp_5_cast_fu_244_p1 = tmp_9_fu_236_p3;

assign tmp_5_fu_188_p3 = TDATAin_V[32'd1];

assign tmp_60_cast_fu_836_p1 = tmp_1_fu_830_p2;

assign tmp_6_cast_fu_256_p1 = tmp_10_fu_248_p3;

assign tmp_6_fu_200_p3 = TDATAin_V[32'd2];

assign tmp_7_cast_fu_268_p1 = tmp_11_fu_260_p3;

assign tmp_7_fu_212_p3 = TDATAin_V[32'd3];

assign tmp_8_cast_fu_280_p1 = tmp_12_fu_272_p3;

assign tmp_8_fu_224_p3 = TDATAin_V[32'd4];

assign tmp_9_cast_fu_292_p1 = tmp_13_fu_284_p3;

assign tmp_9_fu_236_p3 = TDATAin_V[32'd5];

assign tmp_cast_fu_184_p1 = tmp_4_fu_180_p1;

assign tmp_fu_608_p2 = (tmp_8_cast_fu_280_p1 + tmp_7_cast_fu_268_p1);

assign tmp_s_fu_870_p2 = ((tmp_60_cast_fu_836_p1 == reg_numones_V_cast_fu_862_p3) ? 1'b1 : 1'b0);

endmodule //SOP_CDR_Control
